# Generated by Django 5.2.6 on 2025-09-20 01:01

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.IntegerField(blank=True, null=True)),
                ('origin_latitude', models.FloatField()),
                ('origin_longitude', models.FloatField()),
                ('origin_address', models.CharField(blank=True, max_length=255)),
                ('destination_latitude', models.FloatField(blank=True, null=True)),
                ('destination_longitude', models.FloatField(blank=True, null=True)),
                ('destination_address', models.CharField(blank=True, max_length=255)),
                ('transport_mode', models.CharField(choices=[('walk', 'Walking'), ('cycle', 'Cycling'), ('bike', 'Motorcycle'), ('car', 'Car'), ('bus', 'Bus'), ('metro', 'Metro/Subway'), ('train', 'Train'), ('taxi', 'Taxi/Rideshare'), ('plane', 'Airplane'), ('boat', 'Boat/Ferry'), ('other', 'Other')], max_length=20)),
                ('purpose', models.CharField(blank=True, choices=[('work', 'Work'), ('school', 'School/Education'), ('shopping', 'Shopping'), ('leisure', 'Leisure/Recreation'), ('social', 'Social/Visit'), ('medical', 'Medical'), ('exercise', 'Exercise/Sports'), ('business', 'Business'), ('other', 'Other')], max_length=20)),
                ('distance_km', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('mode_confidence', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('purpose_confidence', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('companion_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('companions', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('pending_review', 'Pending Review')], default='active', max_length=20)),
                ('is_manually_created', models.BooleanField(default=False)),
                ('is_validated', models.BooleanField(default=False)),
                ('needs_review', models.BooleanField(default=False)),
                ('weather', models.CharField(blank=True, max_length=50)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('is_private', models.BooleanField(default=False)),
                ('share_for_research', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('synced_at', models.DateTimeField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=100)),
                ('battery_level', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trips',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='TripAnnotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='trip_photos/')),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='trips.trip')),
            ],
            options={
                'db_table': 'trip_annotations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TripChain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_distance', models.FloatField(default=0)),
                ('total_duration', models.IntegerField(default=0)),
                ('primary_mode', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trips', models.ManyToManyField(related_name='chains', to='trips.trip')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trip_chains', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trip_chains',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='TripDetectionEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('trip_start', 'Trip Start Detected'), ('trip_end', 'Trip End Detected'), ('mode_change', 'Transport Mode Change'), ('location_update', 'Location Update')], max_length=20)),
                ('confidence', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detection_events', to='trips.trip')),
            ],
            options={
                'db_table': 'trip_detection_events',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TripWaypoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('speed', models.FloatField(blank=True, null=True)),
                ('bearing', models.FloatField(blank=True, null=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waypoints', to='trips.trip')),
            ],
            options={
                'db_table': 'trip_waypoints',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='FrequentLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location_type', models.CharField(choices=[('home', 'Home'), ('work', 'Work'), ('school', 'School'), ('gym', 'Gym'), ('shopping', 'Shopping'), ('other', 'Other')], max_length=20)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('radius_meters', models.IntegerField(default=100)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('visit_count', models.IntegerField(default=1)),
                ('last_visited', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequent_locations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'frequent_locations',
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['user', '-start_time'], name='trips_user_id_175440_idx'),
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['transport_mode'], name='trips_transpo_dac83a_idx'),
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['purpose'], name='trips_purpose_78707d_idx'),
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['status'], name='trips_status_b30e85_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tripchain',
            unique_together={('user', 'date')},
        ),
        migrations.AddIndex(
            model_name='tripwaypoint',
            index=models.Index(fields=['trip', 'timestamp'], name='trip_waypoi_trip_id_d36133_idx'),
        ),
    ]
