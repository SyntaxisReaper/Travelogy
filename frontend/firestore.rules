rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only access their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Travel data - users can only access their own travel records
    match /travels/{travelId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Trip data - users can only access their own trips
    match /trips/{tripId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Analytics data - users can only access their own analytics
    match /analytics/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Public data that everyone can read (but only admin can write)
    match /public/{document} {
      allow read: if true;
      allow write: if false; // Only allow through admin SDK or cloud functions
    }
    
    // Admin-only collections (for future admin features)
    match /admin/{document=**} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Block all other paths by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}